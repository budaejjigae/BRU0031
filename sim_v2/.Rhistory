View(X)
library(sna)
library(BSPADATA)
library(dplyr)
library(ggmcmc)
set.seed(29486173)
binmat.f <- function(n) {
B <- matrix(0, n, n)
B[1, 2] <- 1
B[n, n-1] <- 1
for (i in 2:(n-1)) {
B[i, i+1] <- 1
B[i, i-1] <- 1
}
return(B)
}
rmvnorm.f <- function(row, mu, Sigma) {
p <- length(mu)
Q <- chol(Sigma)
Z <- matrix(rnorm(row * p), row, p)
X <- Z %*% Q + rep(1, row) %*% t(mu)
X <- data.frame(X)
return(X)
}
dmvnorm.f <- function(x, mu, Sigma, log = TRUE) {
p <- length(x)
if (log == !TRUE) {
f <- exp(-0.5 * t(x - mu) %*% solve(Sigma) %*% (x - mu))
f <- f / ((2 * pi)^(0.5 * p) * det(Sigma)^0.5)
} else {
f <- -0.5 * (log(det(Sigma)) + p * log(2 * pi))
f <- f - 0.5 * (t(x - mu) %*% solve(Sigma) %*% (x - mu))
}
return(f)
}
mu.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
mu <- A %*% X %*% beta
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
X_k <- rho * D_k %*% W %*% s_k %*% t(s_k) %*% X
X_k <- X_k + D_k %*% X
mu <- A_k %*% X_k %*% beta
}
return(mu)
}
Sigma.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
V <- sigma2 * diag(n)
Sigma <- A %*% V %*% t(A)
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
V_k <- rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% s_k %*% t(s_k) %*% t(W) %*% t(D_k)
V_k <- V_k + D_k %*% t(D_k)
V_k <- sigma2 * V_k
Sigma <- A_k %*% V_k %*% t(A_k)
}
return(Sigma)
}
delmat.f <- function(k) {
D <- diag(n-1)
D <- as.data.frame(D)
D <- mutate(D, 0, .before = k)
D <- as.matrix(D)
return(D)
}
selvec.f <- function(k) {
s <- numeric(n)
s[k] <- 1
return(s)
}
n <- 100
B <- binmat.f(n = n)
otlr <- 23
# B[(otlr-3):(otlr-2), otlr] <- 1
# B[(otlr+2):(otlr+3), otlr] <- 1
# B[otlr, (otlr+2):(otlr+3)] <- 1
# B[otlr, (otlr-3):(otlr-2)] <- 1
W <- make.stochastic(dat = B, mode = "row")
x1 <- rep(1, n)
x2 <- runif(n, 0, 400)
x3 <- runif(n, 10, 23)
X <- cbind(x1, x2, x3)
rho <- 0.8
beta <- c(18, 0.478, -1.3)
sigma2 <- 45
# A <- invIrW.f()
mu <- mu.f(beta = beta, sigma2 = sigma2, rho = rho, omit = FALSE)
Sigma <- Sigma.f(beta = beta, sigma2 = sigma2, rho = rho, omit = FALSE)
y <- t(rmvnorm.f(row = 1, mu = mu, Sigma = Sigma))
# Type 1 contamination
ctmn <- 5 * sqrt(Sigma[otlr, otlr]) * selvec.f(otlr)
y <- y + ctmn
eigen(W)$values
sort(rnorm(5, 0, 1))
sort(eigen(W)$values, decreasing = TRUE)
isSymmetric(W)
View(W)
gc()
source("~/Desktop/sim v2/sim.R", echo=TRUE)
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.297)", ylab = "PC2 (0.2579)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.65820.6582)", ylab = "PC2 (0.1160)")
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.6582)", ylab = "PC2 (0.1160)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.3958)", ylab = "PC2 (0.2869)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.7589)", ylab = "PC2 (0.08993)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.9363)", ylab = "PC2 (0.03454)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.4793)", ylab = "PC2 (0.2519)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.5394)", ylab = "PC2 (0.1556)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.297)", ylab = "PC2 (0.2579)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.8474)", ylab = "PC2 (0.05201)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.3042)", ylab = "PC2 (0.2845)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.5504)", ylab = "PC2 (0.1572)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.8557)", ylab = "PC2 (0.04929)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.4236)", ylab = "PC2 (0.2826)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.7126)", ylab = "PC2 (0.1229)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.8998)", ylab = "PC2 (0.0486)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.4889)", ylab = "PC2 (0.2349)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.9508)", ylab = "PC2 (0.02852)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.9726)", ylab = "PC2 (0.01695)")
source("~/Desktop/sim v2/sim.R", echo=TRUE)
library(dplyr)
library(sna)
library(BSPADATA)
library(ggmcmc)
set.seed(29486173)
binmat.f <- function(n) {
B <- matrix(0, n, n)
B[1, 2] <- 1
B[n, n-1] <- 1
for (i in 2:(n-1)) {
B[i, i+1] <- 1
B[i, i-1] <- 1
}
return(B)
}
rmvnorm.f <- function(row, mu, Sigma) {
p <- length(mu)
Q <- chol(Sigma)
Z <- matrix(rnorm(row * p), row, p)
X <- Z %*% Q + rep(1, row) %*% t(mu)
X <- data.frame(X)
return(X)
}
dmvnorm.f <- function(x, mu, Sigma, log = TRUE) {
p <- length(x)
if (log == !TRUE) {
f <- exp(-0.5 * t(x - mu) %*% solve(Sigma) %*% (x - mu))
f <- f / ((2 * pi)^(0.5 * p) * det(Sigma)^0.5)
} else {
f <- -0.5 * (log(det(Sigma)) + p * log(2 * pi))
f <- f - 0.5 * (t(x - mu) %*% solve(Sigma) %*% (x - mu))
}
return(f)
}
mu.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
mu <- A %*% X %*% beta
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
X_k <- rho * D_k %*% W %*% s_k %*% t(s_k) %*% X
X_k <- X_k + D_k %*% X
mu <- A_k %*% X_k %*% beta
}
return(mu)
}
Sigma.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
V <- sigma2 * diag(n)
Sigma <- A %*% V %*% t(A)
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
V_k <- rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% s_k %*% t(s_k) %*% t(W) %*% t(D_k)
V_k <- V_k + D_k %*% t(D_k)
V_k <- sigma2 * V_k
Sigma <- A_k %*% V_k %*% t(A_k)
}
return(Sigma)
}
delmat.f <- function(k) {
D <- diag(n-1)
D <- as.data.frame(D)
D <- mutate(D, 0, .before = k)
D <- as.matrix(D)
return(D)
}
selvec.f <- function(k) {
s <- numeric(n)
s[k] <- 1
return(s)
}
n <- 50
B <- binmat.f(n = n)
View(B)
library(dplyr)
library(sna)
library(BSPADATA)
library(ggmcmc)
set.seed(29486173)
binmat.f <- function(n) {
B <- matrix(0, n, n)
B[1, 2] <- 1
B[n, n-1] <- 1
for (i in 2:(n-1)) {
B[i, i+1] <- 1
B[i, i-1] <- 1
}
return(B)
}
rmvnorm.f <- function(row, mu, Sigma) {
p <- length(mu)
Q <- chol(Sigma)
Z <- matrix(rnorm(row * p), row, p)
X <- Z %*% Q + rep(1, row) %*% t(mu)
X <- data.frame(X)
return(X)
}
dmvnorm.f <- function(x, mu, Sigma, log = TRUE) {
p <- length(x)
if (log == !TRUE) {
f <- exp(-0.5 * t(x - mu) %*% solve(Sigma) %*% (x - mu))
f <- f / ((2 * pi)^(0.5 * p) * det(Sigma)^0.5)
} else {
f <- -0.5 * (log(det(Sigma)) + p * log(2 * pi))
f <- f - 0.5 * (t(x - mu) %*% solve(Sigma) %*% (x - mu))
}
return(f)
}
mu.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
mu <- A %*% X %*% beta
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
X_k <- rho * D_k %*% W %*% s_k %*% t(s_k) %*% X
X_k <- X_k + D_k %*% X
mu <- A_k %*% X_k %*% beta
}
return(mu)
}
Sigma.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
V <- sigma2 * diag(n)
Sigma <- A %*% V %*% t(A)
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
V_k <- rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% s_k %*% t(s_k) %*% t(W) %*% t(D_k)
V_k <- V_k + D_k %*% t(D_k)
V_k <- sigma2 * V_k
Sigma <- A_k %*% V_k %*% t(A_k)
}
return(Sigma)
}
delmat.f <- function(k) {
D <- diag(n-1)
D <- as.data.frame(D)
D <- mutate(D, 0, .before = k)
D <- as.matrix(D)
return(D)
}
selvec.f <- function(k) {
s <- numeric(n)
s[k] <- 1
return(s)
}
n <- 50
# W_1
B <- binmat.f(n = n)
View(B)
otlr <- 23
# W_2
B[otlr, (otlr+2)] <- 1
B[otlr, (otlr-2)] <- 1
B[(otlr+2), otlr] <- 1
B[(otlr-2), otlr] <- 1
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.9528)", ylab = "PC2 (0.03591)")
library(dplyr)
library(sna)
library(BSPADATA)
library(ggmcmc)
set.seed(29486173)
binmat.f <- function(n) {
B <- matrix(0, n, n)
B[1, 2] <- 1
B[n, n-1] <- 1
for (i in 2:(n-1)) {
B[i, i+1] <- 1
B[i, i-1] <- 1
}
return(B)
}
rmvnorm.f <- function(row, mu, Sigma) {
p <- length(mu)
Q <- chol(Sigma)
Z <- matrix(rnorm(row * p), row, p)
X <- Z %*% Q + rep(1, row) %*% t(mu)
X <- data.frame(X)
return(X)
}
dmvnorm.f <- function(x, mu, Sigma, log = TRUE) {
p <- length(x)
if (log == !TRUE) {
f <- exp(-0.5 * t(x - mu) %*% solve(Sigma) %*% (x - mu))
f <- f / ((2 * pi)^(0.5 * p) * det(Sigma)^0.5)
} else {
f <- -0.5 * (log(det(Sigma)) + p * log(2 * pi))
f <- f - 0.5 * (t(x - mu) %*% solve(Sigma) %*% (x - mu))
}
return(f)
}
mu.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
mu <- A %*% X %*% beta
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
X_k <- rho * D_k %*% W %*% s_k %*% t(s_k) %*% X
X_k <- X_k + D_k %*% X
mu <- A_k %*% X_k %*% beta
}
return(mu)
}
Sigma.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
V <- sigma2 * diag(n)
Sigma <- A %*% V %*% t(A)
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
V_k <- rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% s_k %*% t(s_k) %*% t(W) %*% t(D_k)
V_k <- V_k + D_k %*% t(D_k)
V_k <- sigma2 * V_k
Sigma <- A_k %*% V_k %*% t(A_k)
}
return(Sigma)
}
delmat.f <- function(k) {
D <- diag(n-1)
D <- as.data.frame(D)
D <- mutate(D, 0, .before = k)
D <- as.matrix(D)
return(D)
}
selvec.f <- function(k) {
s <- numeric(n)
s[k] <- 1
return(s)
}
n <- 50
# B_1
B <- binmat.f(n = n)
otlr <- 23
# B_2
# B[otlr, (otlr+2)] <- 1
# B[otlr, (otlr-2)] <- 1
# B[(otlr+2), otlr] <- 1
# B[(otlr-2), otlr] <- 1
# B_3
B[otlr, (otlr+2):(otlr+3)] <- 1
B[otlr, (otlr-3):(otlr-2)] <- 1
B[(otlr+2):(otlr+3), otlr] <- 1
B[(otlr-3):(otlr-2), otlr] <- 1
View(B)
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.9592)", ylab = "PC2 (0.02735)")
library(dplyr)
library(sna)
library(BSPADATA)
library(ggmcmc)
set.seed(29486173)
binmat.f <- function(n) {
B <- matrix(0, n, n)
B[1, 2] <- 1
B[n, n-1] <- 1
for (i in 2:(n-1)) {
B[i, i+1] <- 1
B[i, i-1] <- 1
}
return(B)
}
rmvnorm.f <- function(row, mu, Sigma) {
p <- length(mu)
Q <- chol(Sigma)
Z <- matrix(rnorm(row * p), row, p)
X <- Z %*% Q + rep(1, row) %*% t(mu)
X <- data.frame(X)
return(X)
}
dmvnorm.f <- function(x, mu, Sigma, log = TRUE) {
p <- length(x)
if (log == !TRUE) {
f <- exp(-0.5 * t(x - mu) %*% solve(Sigma) %*% (x - mu))
f <- f / ((2 * pi)^(0.5 * p) * det(Sigma)^0.5)
} else {
f <- -0.5 * (log(det(Sigma)) + p * log(2 * pi))
f <- f - 0.5 * (t(x - mu) %*% solve(Sigma) %*% (x - mu))
}
return(f)
}
mu.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
mu <- A %*% X %*% beta
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
X_k <- rho * D_k %*% W %*% s_k %*% t(s_k) %*% X
X_k <- X_k + D_k %*% X
mu <- A_k %*% X_k %*% beta
}
return(mu)
}
Sigma.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
V <- sigma2 * diag(n)
Sigma <- A %*% V %*% t(A)
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
V_k <- rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% s_k %*% t(s_k) %*% t(W) %*% t(D_k)
V_k <- V_k + D_k %*% t(D_k)
V_k <- sigma2 * V_k
Sigma <- A_k %*% V_k %*% t(A_k)
}
return(Sigma)
}
delmat.f <- function(k) {
D <- diag(n-1)
D <- as.data.frame(D)
D <- mutate(D, 0, .before = k)
D <- as.matrix(D)
return(D)
}
selvec.f <- function(k) {
s <- numeric(n)
s[k] <- 1
return(s)
}
n <- 50
# B_1
B <- binmat.f(n = n)
otlr <- 23
# B[otlr, (otlr+2)] <- 1
# B[otlr, (otlr-2)] <- 1
# B[(otlr+2), otlr] <- 1
# B[(otlr-2), otlr] <- 1
# B_3
# B[otlr, (otlr+2):(otlr+3)] <- 1
# B[otlr, (otlr-3):(otlr-2)] <- 1
# B[(otlr+2):(otlr+3), otlr] <- 1
# B[(otlr-3):(otlr-2), otlr] <- 1
# B_4
B[otlr, (otlr+2):(otlr+4)] <- 1
B[otlr, (otlr-4):(otlr-2)] <- 1
B[(otlr+2):(otlr+4), otlr] <- 1
B[(otlr-4):(otlr-2), otlr] <- 1
View(B)
source("~/Desktop/sim v2/sim.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (0.953)", ylab = "PC2 (0.0314)")
