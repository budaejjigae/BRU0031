}
function_08(2)
function_08 = function(k) {
#     deletion matrix
D = as.data.frame(D)
output = mutate(D, 0, .before = k)
# output = as.matrix(output)
return(output)
}
function_08(2)
function_08(2)
test = function_08(2)
View(test)
function_08 = function(k) {
#     deletion matrix
D = as.data.frame(D)
output = mutate(D, 0, .before = k)
output = as.matrix(output)
return(output)
}
test = function_08(2)
library(mvtnorm)
library(mvtnorm)
rmvnorm(10, numeric(5), diag(5))
rnorm(10, 0, 1)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
library(pracma)
library(mvtnorm)
library(MCMCpack)
library(ggmcmc)
library(dplyr)
# set.seed(80357)
set.seed(80433)
rho_0 = 0.5
m = 10
beta_0 = rep(0.5, m)
sigma2_0 = 0.5
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
c(1:5)
log(c(1:5))
View(MCMC)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
I = 10000  #             iterations
B = 1000   #             burn in
R = I - B  #             retained draws
t = 0      #             thinning
seq(B, I, t)
I = 10000  #             iterations
B = 1000   #             burn in
R = I - B  #             retained draws
t = 1      #             thinning
seq(B, I, t)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
View(MCMC_GG)
View(MCMC)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
k = 10
D_k = function_10(k)
s_k = function_11(k)
A_k = D - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k)
A_k = D - 0.5^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k)
A_k = A_k - 0.5 * D_k %*% W %*% t(D_k)
View(A_k)
V_k = 0.5 * 0.5^2 * D_k %*% W %*% s_k %*% t(s_k) %*% s_k %*% t(s_k) %*% t(W) %*% t(D_k)
V_k = V_k + 0.5 * D_k %*% t(D_k)
View(V_k)
y_k = D_k %*% y
X_k = 0.5 * D_k %*% W %*% s_k %*% t(s_k) %*% X + D_k %*% X
e_k = A_k %*% y_k - X_k %*% beta_0
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
function_15(rho_0, beta_0, sigma2_0, 15)
k = 1
D_k = function_10(k)
s_k = function_11(k)
A_k = D - rho_0^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k)
A_k = A_k - rho_0 * D_k %*% W %*% t(D_k)
V_k = sigma2_0 * rho_0^2 * D_k %*% W %*% s_k %*% t(s_k) %*% s_k %*% t(s_k) %*% t(W) %*% t(D_k)
V_k = V_k + sigma2_0 * D_k %*% t(D_k)
y_k = D_k %*% y
X_k = rho_0 * D_k %*% W %*% s_k %*% t(s_k) %*% X + D_k %*% X
e_k = A_k %*% y_k - X_k %*% beta_0
View(e_k)
output = dmvnorm(e_k, numeric(n - 1), V_k)
output = dmvnorm(e_k, numeric(m), V_k)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
function_03(rho_0, beta_0, sigma2_0)
function_03 = function(rho, beta, sigma2) {
# unperturbed likelihood
A = I_n - rho * W     #    *** slow ***
V = sigma2 * I_n      #    *** slow ***
e = A %*% y - X %*% beta
output = dmvnorm(e, numeric(m), V)
output = det(A) * output
return(output)
}
function_03(rho_0, beta_0, sigma2_0)
function_03 = function(rho, beta, sigma2) {
# unperturbed likelihood
A = I_n - rho * W     #    *** slow ***
V = sigma2 * I_n      #    *** slow ***
e = A %*% y - X %*% beta
output = dmvnorm(e, rep(0, length = ncol(e)), V)
output = det(A) * output
return(output)
}
function_03(rho_0, beta_0, sigma2_0)
function_03 = function(rho, beta, sigma2) {
# unperturbed likelihood
A = I_n - rho * W     #    *** slow ***
V = sigma2 * I_n      #    *** slow ***
e = A %*% y - X %*% beta
# output = dmvnorm(e, numeric(n), V)
output = dnorm(e, numeric(n), V)
output = det(A) * output
return(output)
}
function_03(rho_0, beta_0, sigma2_0)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
dnorm(rep(1,2),0,sqrt(2))
rep(1,2)
dnorm(c(1:10), numeric(10), diag(10))
dnorm(c(1:10), numeric(2), diag(2))
dnorm(c(1:10), numeric(5), diag(5))
library(pracma)
library(mvtnorm)
library(MCMCpack)
library(ggmcmc)
library(dplyr)
# set.seed(80357)
set.seed(80433)
rho_0 = 0.5
m = 10
beta_0 = rep(0.5, m)
sigma2_0 = 0.5
n = 100
I_n = diag(n)
C = Diag(rep(1, n - 1), 1) + Diag(rep(1, n - 1), -1)
W = C / rowSums(C)      #             right stochastic
X = rmvnorm(n, numeric(m), diag(m))
e = rnorm(n, 0, sqrt(sigma2_0))
A_0 = I_n - rho_0 * W
y = solve(A_0) %*% X %*% beta_0 + solve(A_0) %*% e
dmvnorm(A %*% y - X %*% beta)
dmvnorm(e)
library(mvtnorm)
cbind(1, rmvnorm(n, numeric(m - 1), diag(m - 1)))
cbind(1, rmvnorm(n, numeric(9), diag(9)))
cbind(1, rmvnorm(20, numeric(9), diag(9)))
rmvnorm(100)
rmvnorm(100, 0, 1)
rmvnorm(100, numeric(10), diag(10))
rmvnorm(100, numeric(1), diag(1))
set.seed(100)
rnorm(10, 0, 1) - rmvnorm(10, 0, 1)
rnorm(10, 0, 1) - rmvnorm(10, numeric(1), diag(1))
rnorm(10, 0, 1)
rmvnorm(10, numeric(1), diag(1))
set.seed(100)
A = rnorm(10, 0, 1)
B = rmvnorm(10, numeric(1), diag(1))
rmvnorm(n, numeric(1), 0.5 * diag(1))
rmvnorm(100, numeric(1), 0.5 * diag(1))
library(mvtnorm)
rmvnorm(n, numeric(m - 1), diag(m - 1))
rmvnorm(n, numeric(9), diag(9))
rmvnorm(100, numeric(9), diag(9))
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
View(X)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
function_03(rho_0, beta_0, sigma2_0)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
function_03(rho_0, beta_0, sigma2_0)
function_14(rho_0, beta_0, sigma2_0, 20)
function_14(rho_0, beta_0, sigma2_0, 20)
function_14 = function(rho, beta, sigma2, k) {
# perturbed likelihood
D_k = function_10(k)
s_k = function_11(k)
A_k = D - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k)
A_k = A_k - rho * D_k %*% W %*% t(D_k)
V_k = sigma2 * rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% s_k %*% t(s_k) %*% t(W) %*% t(D_k)
V_k = V_k + sigma2 * D_k %*% t(D_k)
y_k = D_k %*% y
X_k = rho * D_k %*% W %*% s_k %*% t(s_k) %*% X + D_k %*% X
e_k = A_k %*% y_k - X_k %*% beta
output = det(A_k) / ((2 * pi)^((n - 1) / 2) * det(V_k)^(1 / 2))
output = output * exp(-t(e_k) %*% solve(V_k) %*% e_k / 2)
return(output)
}
function_14(rho_0, beta_0, sigma2_0, 20)
function_15(rho_0, beta_0, sigma2_0, 20)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
source('~/Desktop/BRU0031 1/R/R.R', echo=TRUE)
View(W_IS)
plot(cov(W_IS))
62/46
install.packages("spdep")
install.packages("rgdal")
library(spdep)
install.packages("spdep")
install.packages("spdep")
library(spdep)
library(rgdal)
install.packages("rgdal")
library(rgdal)
library(spdep)
library(rgdal)
library(spdep)
library(rgdal)
queen.nb=read.gal("queen.gal", region.id=NCVACO$FIPS)
library(rgdal)
queen.nb=read.gal("queen.gal", region.id=NCVACO$FIPS)
library(spdep)
install.packages("spdep")
library(spdep)
queen.nb=read.gal("queen.gal", region.id=NCVACO$FIPS)
library(spdep)
NCVACO = readOGR(dsn = ".", layer = "NCVACO")
NCVACO = readOGR(dsn = ".", layer = "NCVACO")
NCVACO = readOGR(dsn = ".", layer = "NCVACO")
setwd("~/Downloads")
NCVACO = readOGR(dsn = ".", layer = "NCVACO")
setwd("~/Downloads/R Spatial 1 Data")
NCVACO = readOGR(dsn = ".", layer = "NCVACO")
columbus = readOGR(dsn = "~/Downloads/columbus", layer = "NCVACO")
library(rgdal)
columbus = readOGR(dsn = "~/Downloads/columbus", layer = "columbus")
View(columbus)
summary(columbus)
library(spdep)
library(spdep)
install.packages("raster")
library(spdep)
library(spData)
library(spdep)
install.packages("sf")
install.packages("spdep")
library(spdep)
install.packages('terra', repos='https://rspatial.r-universe.dev')
install.packages('raster')
install.packages("spdep")
library(spdep)
install.packages('terra', repos='https://rspatial.r-universe.dev')
install.packages('raster')
library(spdep)
install.packages("spdep")
library(spdep)
install.packages('spdep')
install.packages("spdep")
library(spdep)
remove.packages("spdep", lib="~/Library/R/4.0/library")
install.packages("spdep")
install.packages("spdep")
install.packages("terra")
install.packages("spdep")
library(spdep)
install.packages('spdep')
install.packages("~/Downloads/spdep_1.2-4.tar", repos = NULL)
library(spdep)
install.packages(c("Rcpp", "rgdal", "sp", "terra", "raster"))
install.packages(c("Rcpp", "rgdal", "sp", "terra", "raster"))
install.packages("raster")
install.packages("spData")
install.packages("spdep")
library(spdep)
library(spdep)
library(rgdal)
columbus = readOGR(dsn = "~/Downloads/columbus", layer = "columbus")
columbus_queen = poly2nb(columbus)
View(columbus_queen)
C = nb2listw(columbus_queen)
View(C)
C[["weights"]]
C[["neighbours"]]
C = nb2listw(neighbours = columbus_queen, style = "B")
View(C)
C[["weights"]]
View(C)
C
C$weights
View(C)
C[["neighbours"]]
view(C[["neighbours"]])
vView(C[["neighbours"]])
View(C[["neighbours"]])
C[["neighbours"]][[9]]
C = as_dgRMatrix_listw(C)
install.packages("spatialreg")
install.packages("spatialreg")
library(spatialreg)
install.packages("spatialreg")
library(spatialreg)
library(spatialreg)
install.packages("spatialreg")
library(spatialreg)
library(spdep)
library(rgdal)
library(spatialreg)
columbus = readOGR(dsn = "~/Downloads/columbus", layer = "columbus")
columbus_queen = poly2nb(columbus)
C = nb2listw(neighbours = columbus_queen, style = "B")
C = as_dgRMatrix_listw(C)
View(C)
View(C)
C@x
View(C)
spdep::as_dgRMatrix_listw(
listw = C
)
spatialreg::as_dgRMatrix_listw(
listw = C
)
columbus = readOGR(dsn = "~/Downloads/columbus", layer = "columbus")
columbus_queen = poly2nb(columbus)
C = nb2listw(neighbours = columbus_queen, style = "B")
spatialreg::as_dgRMatrix_listw(
listw = C
)
D = spatialreg::as_dgRMatrix_listw(
listw = C
)
D
View(D)
D$p
library(rgdal)
library(spdep)
columbus = readOGR(dsn = "~/Downloads/BRU0031/columbus", layer = "columbus")
queen = read.gal(file = "columbus.gal", region.id = columbus$NEIG)
setwd("~/Downloads/BRU0031/columbus")
queen = read.gal(file = "columbus.gal", region.id = columbus$NEIG)
queen = read.gal(file = "~/Downloads/BRU0031/columbus/columbus.gal", region.id = columbus$NEIG)
setwd("~/Downloads/BRU0031/columbus")
columbus = readOGR(layer = "columbus")
setwd("~/Downloads/BRU0031/columbus")
columbus = readOGR(dsn = ".", layer = "columbus")
queen = read.gal(file = "columbus.gal", region.id = columbus$NEIG)
library(rgdal)
library(spdep)
setwd("~/Downloads/BRU0031/columbus")
columbus = readOGR(dsn = ".", layer = "columbus")
columbus_queen = read.gal(file = "columbus.gal", region.id = columbus$NEIG)
summary(columbus_queen)
names(columbus)
summary(columbus)
summary(columbus)
View(columbus)
spplot(columbus, "CRIME")
View(columbus_queen)
columbus_queen = nb2listw(columbus_queen)
summary(columbus_queen)
View(columbus_queen)
rownames(columbus)
row.names(columbus)
setwd("~/Downloads/BRU0031/columbus")
columbus = rgdal::readOGR(dsn = ".", layer = "columbus")
summary(columbus)
spplot(columbus, "CRIME")
columbus_queen = spdep::read.gal(file = "columbus.gal", region.id = columbus$NEIG)
summary(columbus_queen)
columbus_queen = nb2listw(columbus_queen)
columbus_queen = spdep::read.gal(file = "columbus.gal", region.id = columbus$NEIG)
View(columbus_queen)
summary(columbus_queen)
columbus_queen = nb2listw(columbus_queen)
View(columbus_queen)
columbus_queen[["weights"]]
library(rgdal)
library(spdep)
setwd("~/Downloads/BRU0031/columbus")
columbus = readOGR(dsn = ".", layer = "columbus")
summary(columbus)
spplot(columbus, "CRIME")
# columbus_queen = read.gal(file = "columbus.gal", region.id = columbus$NEIG)
columbus_queen = read.gal(file = "columbus.gal", region.id = row.names(columbus))
columbus_queen = read.gal(file = "columbus.gal", region.id = columbus$NEIG)
summary(columbus_queen)
columbus_queen = nb2listw(columbus_queen)
setwd("~/Downloads/BRU0031/columbus")
columbus = readOGR(dsn = ".", layer = "columbus")
summary(columbus)
spplot(columbus, "CRIME")
columbus_queen = read.gal(file = "columbus.gal", region.id = columbus$NEIG)
length(columbus_queen)
columbus_queen = nb2listw(columbus_queen)
View(columbus_queen)
spplot(obj = columbus, zcol = "CRIME")
columbus_queen = nb2listw(neighbours = columbus_queen)
columbus_queen = nb2listw(neighbours = columbus_queen)
columbus_queen = nb2listw(neighbours = "columbus_queen")
columbus_queen = nb2listw(columbus_queen)
spplot(obj = columbus, zcol = "CRIME")
columbus_queen = read.gal(file = "columbus.gal", region.id = columbus$NEIG)
summary(columbus_queen)
columbus_queen = nb2listw(columbus_queen)
columbus_queen = read.gal(file = "columbus.gal", region.id = columbus$NEIG)
summary(columbus_queen)
columbus_queen = nb2listw(neighbours = columbus_queen)
columbus = readOGR(dsn = ".", layer = "columbus")
summary(columbus)
library(rgdal)
library(spdep)
setwd("~/Downloads/BRU0031/columbus")
columbus = readOGR(dsn = ".", layer = "columbus")
summary(columbus)
spplot(obj = columbus, zcol = "CRIME")
columbus_queen = read.gal(file = "columbus.gal", region.id = columbus$NEIG)
summary(columbus_queen)
setwd("~/Downloads/BRU0031/columbus")
columbus = readOGR(dsn = ".", layer = "columbus")
summary(columbus)
spplot(obj = columbus, zcol = "CRIME")
columbus_queen = read.gal(file = "columbus.gal", region.id = columbus$NEIG)
summary(columbus_queen)
columbus_queen = nb2listw(neighbours = columbus_queen)
setwd("~/Downloads/BRU0031/columbus")
columbus = readOGR(dsn = ".", layer = "columbus")
summary(columbus)
spplot(obj = columbus, zcol = "CRIME")
columbus_queen = read.gal(file = "columbus.gal", region.id = columbus$NEIG)
summary(columbus_queen)
plot(columbus)
plot(columbus_queen)
plot(columbus_queen, coordinates(columbus))
plot(columbus)
plot(columbus_queen, coordinates(columbus), add = TRUE)
library(rgdal)
library(spdep)
setwd("~/Downloads/BRU0031/columbus")
columbus = readOGR(dsn = ".", layer = "columbus")
columbus_queen = read.gal(file = "columbus.gal", region.id = columbus$NEIG)
plot(columbus)
plot(columbus_queen, coordinates(columbus), add = TRUE)
W = nb2listw(neighbours = columbus_queen)
W
W
library(rgdal)
library(spdep)
setwd("~/Downloads/BRU0031/columbus")
columbus = readOGR(dsn = ".", layer = "columbus")
columbus_queen = read.gal(file = "columbus.gal")
plot(columbus)
plot(columbus_queen, coordinates(columbus), add = TRUE)
library(rgdal)
library(spdep)
setwd("~/Downloads/BRU0031/columbus")
columbus = readOGR(dsn = ".", layer = "columbus")
columbus_queen = read.gal(file = "columbus.gal", region.id = columbus$NEIG)
plot(columbus)
plot(columbus_queen, coordinates(columbus), add = TRUE)
W = nb2listw(neighbours = columbus_queen)
W = listw2mat(W)
View(W)
library(rgdal)
library(spdep)
setwd("~/Downloads/BRU0031/columbus")
columbus = readOGR(dsn = ".", layer = "columbus")
columbus_queen = read.gal(file = "columbus.gal", region.id = columbus$NEIG)
(
(
columbus = readOGR(dsn = ".", layer = "columbus")
columbus_queen = read.gal(file = "columbus.gal", region.id = columbus$POLYID)
library(rgdal)
library(spdep)
setwd("~/Downloads/BRU0031/columbus")
columbus = readOGR(dsn = ".", layer = "columbus")
columbus_queen = read.gal(file = "columbus.gal", region.id = columbus$POLYID)
plot(columbus)
plot(columbus_queen, coordinates(columbus), add = TRUE)
W = nb2listw(neighbours = columbus_queen)
W = listw2mat(W)
View(W)
W
View(W)
View(W)
library(rgdal)
library(spdep)
setwd("~/Downloads/BRU0031/columbus")
columbus = readOGR(dsn = ".", layer = "columbus")
columbus_queen = read.gal(file = "columbus.gal", region.id = columbus$POLYID)
plot(columbus)
plot(columbus_queen, coordinates(columbus), add = TRUE)
W = nb2listw(neighbours = columbus_queen)
W = listw2mat(W)
View(W)
View(W)
W%*%W
library(rgdal)
library(spdep)
setwd("~/Downloads/BRU0031/columbus")
columbus = readOGR(dsn = ".", layer = "columbus")
columbus_queen = read.gal(file = "columbus.gal", region.id = columbus$POLYID)
plot(columbus)
plot(columbus_queen, coordinates(columbus), add = TRUE)
W = nb2listw(neighbours = columbus_queen)
W = listw2mat(W)
View(W)
View(W)
source("~/Downloads/BRU0031/columbus/columbus.R", echo=TRUE)
