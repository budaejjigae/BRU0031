source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (61%)", ylab = "PC2 (16%)")
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (78%)", ylab = "PC2 (8%)")
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (87%)", ylab = "PC2 (5%)")
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (61%)", ylab = "PC2 (16%)")
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (57%)", ylab = "PC2 (21%)")
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (62%)", ylab = "PC2 (21%)")
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (70%)", ylab = "PC2 (18%)")
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (81%)", ylab = "PC2 (11%)")
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (60%)", ylab = "PC2 (16%)")
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (62%)", ylab = "PC2 (14%)")
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (66%)", ylab = "PC2 (12%)")
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (70%)", ylab = "PC2 (10%)")
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (72%)", ylab = "PC2 (9%)")
biplot(PCA, cex=c(0.01, 0.1), xlab = "PC1 (72%)", ylab = "PC2 (9%)")
biplot(PCA, cex=c(0.01, 0.5), xlab = "PC1 (72%)", ylab = "PC2 (9%)")
library(sna)
library(BSPADATA)
library(dplyr)
set.seed(743435)
binmat.f <- function(n) {
B <- matrix(0, n, n)
B[1, 2] <- 1
B[n, n-1] <- 1
for (i in 2:(n-1)) {
B[i, i+1] <- 1
B[i, i-1] <- 1
}
return(B)
}
rmvnorm.f <- function(n, mu, Sigma) {
p <- length(mu)
Q <- chol(Sigma)
Z <- matrix(rnorm(n * p), n, p)
X <- Z %*% Q + rep(1, n) %*% t(mu)
X <- data.frame(X)
return(X)
}
dmvnorm.f <- function(x, mu, Sigma, log = TRUE) {
p <- length(x)
if (log == !TRUE) {
f <- exp(-0.5 * t(x - mu) %*% solve(Sigma) %*% (x - mu))
f <- f / ((2 * pi)^(0.5 * p) * det(Sigma)^0.5)
} else {
f <- -0.5 * (log(det(Sigma)) + p * log(2 * pi))
f <- f - 0.5 * (t(x - mu) %*% solve(Sigma) %*% (x - mu))
}
return(f)
}
mu.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
mu <- A %*% X %*% beta
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
X_k <- rho * D_k %*% W %*% s_k %*% t(s_k) %*% X
X_k <- X_k + D_k %*% X
mu <- A_k %*% X_k %*% beta
}
return(mu)
}
Sigma.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
V <- sigma2 * diag(n)
Sigma <- A %*% V %*% t(A)
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
V_k <- rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% s_k %*% t(s_k) %*% t(W) %*% t(D_k)
V_k <- V_k + D_k %*% t(D_k)
V_k <- sigma2 * V_k
Sigma <- A_k %*% V_k %*% t(A_k)
}
return(Sigma)
}
delmat.f <- function(k) {
D <- diag(n-1)
D <- as.data.frame(D)
D <- mutate(D, 0, .before = k)
D <- as.matrix(D)
return(D)
}
selvec.f <- function(k) {
s <- numeric(n)
s[k] <- 1
return(s)
}
n <- 50
B <- binmat.f(n = n)
View(B)
B[1:26, 28] <- 1
View(B)
B[30:n, 28] <- 1
W <- make.stochastic(dat = B, mode = "row")
View(W)
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
n <- 50
B <- binmat.f(n = n)
View(B)
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 0.5), xlab = "PC1 (82%)", ylab = "PC2 (10%)")
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (55%)", ylab = "PC2 (20%)")
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (43%)", ylab = "PC2 (22%)")
library(sna)
library(BSPADATA)
library(dplyr)
set.seed(743435)
binmat.f <- function(n) {
B <- matrix(0, n, n)
B[1, 2] <- 1
B[n, n-1] <- 1
for (i in 2:(n-1)) {
B[i, i+1] <- 1
B[i, i-1] <- 1
}
return(B)
}
rmvnorm.f <- function(n, mu, Sigma) {
p <- length(mu)
Q <- chol(Sigma)
Z <- matrix(rnorm(n * p), n, p)
X <- Z %*% Q + rep(1, n) %*% t(mu)
X <- data.frame(X)
return(X)
}
dmvnorm.f <- function(x, mu, Sigma, log = TRUE) {
p <- length(x)
if (log == !TRUE) {
f <- exp(-0.5 * t(x - mu) %*% solve(Sigma) %*% (x - mu))
f <- f / ((2 * pi)^(0.5 * p) * det(Sigma)^0.5)
} else {
f <- -0.5 * (log(det(Sigma)) + p * log(2 * pi))
f <- f - 0.5 * (t(x - mu) %*% solve(Sigma) %*% (x - mu))
}
return(f)
}
mu.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
mu <- A %*% X %*% beta
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
X_k <- rho * D_k %*% W %*% s_k %*% t(s_k) %*% X
X_k <- X_k + D_k %*% X
mu <- A_k %*% X_k %*% beta
}
return(mu)
}
Sigma.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
V <- sigma2 * diag(n)
Sigma <- A %*% V %*% t(A)
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
V_k <- rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% s_k %*% t(s_k) %*% t(W) %*% t(D_k)
V_k <- V_k + D_k %*% t(D_k)
V_k <- sigma2 * V_k
Sigma <- A_k %*% V_k %*% t(A_k)
}
return(Sigma)
}
delmat.f <- function(k) {
D <- diag(n-1)
D <- as.data.frame(D)
D <- mutate(D, 0, .before = k)
D <- as.matrix(D)
return(D)
}
selvec.f <- function(k) {
s <- numeric(n)
s[k] <- 1
return(s)
}
n <- 50
B <- binmat.f(n = n)
B[28, 1:26] <- 1
n <- 50
B <- binmat.f(n = n)
View(B)
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (65%)", ylab = "PC2 (21%)")
library(sna)
library(BSPADATA)
library(dplyr)
set.seed(743435)
binmat.f <- function(n) {
B <- matrix(0, n, n)
B[1, 2] <- 1
B[n, n-1] <- 1
for (i in 2:(n-1)) {
B[i, i+1] <- 1
B[i, i-1] <- 1
}
return(B)
}
rmvnorm.f <- function(n, mu, Sigma) {
p <- length(mu)
Q <- chol(Sigma)
Z <- matrix(rnorm(n * p), n, p)
X <- Z %*% Q + rep(1, n) %*% t(mu)
X <- data.frame(X)
return(X)
}
dmvnorm.f <- function(x, mu, Sigma, log = TRUE) {
p <- length(x)
if (log == !TRUE) {
f <- exp(-0.5 * t(x - mu) %*% solve(Sigma) %*% (x - mu))
f <- f / ((2 * pi)^(0.5 * p) * det(Sigma)^0.5)
} else {
f <- -0.5 * (log(det(Sigma)) + p * log(2 * pi))
f <- f - 0.5 * (t(x - mu) %*% solve(Sigma) %*% (x - mu))
}
return(f)
}
mu.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
mu <- A %*% X %*% beta
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
X_k <- rho * D_k %*% W %*% s_k %*% t(s_k) %*% X
X_k <- X_k + D_k %*% X
mu <- A_k %*% X_k %*% beta
}
return(mu)
}
Sigma.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
V <- sigma2 * diag(n)
Sigma <- A %*% V %*% t(A)
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
V_k <- rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% s_k %*% t(s_k) %*% t(W) %*% t(D_k)
V_k <- V_k + D_k %*% t(D_k)
V_k <- sigma2 * V_k
Sigma <- A_k %*% V_k %*% t(A_k)
}
return(Sigma)
}
delmat.f <- function(k) {
D <- diag(n-1)
D <- as.data.frame(D)
D <- mutate(D, 0, .before = k)
D <- as.matrix(D)
return(D)
}
selvec.f <- function(k) {
s <- numeric(n)
s[k] <- 1
return(s)
}
n <- 50
B <- binmat.f(n = n)
View(B)
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (52%)", ylab = "PC2 (21%)")
source("~/Downloads/BRU0031/simulation/simulation.R", echo=TRUE)
source("~/Desktop/未命名檔案夾/Untitled.R", echo=TRUE)
source("~/Desktop/未命名檔案夾/Untitled.R", echo=TRUE)
source("~/Desktop/未命名檔案夾/Untitled.R", echo=TRUE)
source("~/Desktop/未命名檔案夾/Untitled.R", echo=TRUE)
source("~/Desktop/未命名檔案夾/Untitled.R", echo=TRUE)
View(B)
library(sna)
library(BSPADATA)
library(dplyr)
set.seed(743435)
binmat.f <- function(n) {
B <- matrix(0, n, n)
B[1, 2] <- 1
B[n, n-1] <- 1
for (i in 2:(n-1)) {
B[i, i+1] <- 1
B[i, i-1] <- 1
}
return(B)
}
rmvnorm.f <- function(n, mu, Sigma) {
p <- length(mu)
Q <- chol(Sigma)
Z <- matrix(rnorm(n * p), n, p)
X <- Z %*% Q + rep(1, n) %*% t(mu)
X <- data.frame(X)
return(X)
}
dmvnorm.f <- function(x, mu, Sigma, log = TRUE) {
p <- length(x)
if (log == !TRUE) {
f <- exp(-0.5 * t(x - mu) %*% solve(Sigma) %*% (x - mu))
f <- f / ((2 * pi)^(0.5 * p) * det(Sigma)^0.5)
} else {
f <- -0.5 * (log(det(Sigma)) + p * log(2 * pi))
f <- f - 0.5 * (t(x - mu) %*% solve(Sigma) %*% (x - mu))
}
return(f)
}
mu.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
mu <- A %*% X %*% beta
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
X_k <- rho * D_k %*% W %*% s_k %*% t(s_k) %*% X
X_k <- X_k + D_k %*% X
mu <- A_k %*% X_k %*% beta
}
return(mu)
}
Sigma.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
V <- sigma2 * diag(n)
Sigma <- A %*% V %*% t(A)
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
V_k <- rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% s_k %*% t(s_k) %*% t(W) %*% t(D_k)
V_k <- V_k + D_k %*% t(D_k)
V_k <- sigma2 * V_k
Sigma <- A_k %*% V_k %*% t(A_k)
}
return(Sigma)
}
delmat.f <- function(k) {
D <- diag(n-1)
D <- as.data.frame(D)
D <- mutate(D, 0, .before = k)
D <- as.matrix(D)
return(D)
}
selvec.f <- function(k) {
s <- numeric(n)
s[k] <- 1
return(s)
}
n <- 50
B <- binmat.f(n = n)
View(B)
source("~/Desktop/未命名檔案夾/Untitled.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (74%)", ylab = "PC2 (15%)")
source("~/Desktop/未命名檔案夾/Untitled.R", echo=TRUE)
source("~/Desktop/未命名檔案夾/Untitled.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 0.5), xlab = "PC1 (35%)", ylab = "PC2 (27%)")
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (35%)", ylab = "PC2 (27%)")
mcmc$summary
MCMC$summary
library(sna)
library(BSPADATA)
library(dplyr)
set.seed(743435)
binmat.f <- function(n) {
B <- matrix(0, n, n)
B[1, 2] <- 1
B[n, n-1] <- 1
for (i in 2:(n-1)) {
B[i, i+1] <- 1
B[i, i-1] <- 1
}
return(B)
}
rmvnorm.f <- function(n, mu, Sigma) {
p <- length(mu)
Q <- chol(Sigma)
Z <- matrix(rnorm(n * p), n, p)
X <- Z %*% Q + rep(1, n) %*% t(mu)
X <- data.frame(X)
return(X)
}
dmvnorm.f <- function(x, mu, Sigma, log = TRUE) {
p <- length(x)
if (log == !TRUE) {
f <- exp(-0.5 * t(x - mu) %*% solve(Sigma) %*% (x - mu))
f <- f / ((2 * pi)^(0.5 * p) * det(Sigma)^0.5)
} else {
f <- -0.5 * (log(det(Sigma)) + p * log(2 * pi))
f <- f - 0.5 * (t(x - mu) %*% solve(Sigma) %*% (x - mu))
}
return(f)
}
mu.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
mu <- A %*% X %*% beta
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
X_k <- rho * D_k %*% W %*% s_k %*% t(s_k) %*% X
X_k <- X_k + D_k %*% X
mu <- A_k %*% X_k %*% beta
}
return(mu)
}
Sigma.f <- function(beta, sigma2, rho, omit = TRUE) {
if (omit == !TRUE) {
A <- diag(n) - rho * W
A <- solve(A)
V <- sigma2 * diag(n)
Sigma <- A %*% V %*% t(A)
} else {
A_k <- diag(n-1)
A_k <- A_k - rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% W %*% t(D_k) - rho * D_k %*% W %*% t(D_k)
A_k <- solve(A_k)
V_k <- rho^2 * D_k %*% W %*% s_k %*% t(s_k) %*% s_k %*% t(s_k) %*% t(W) %*% t(D_k)
V_k <- V_k + D_k %*% t(D_k)
V_k <- sigma2 * V_k
Sigma <- A_k %*% V_k %*% t(A_k)
}
return(Sigma)
}
delmat.f <- function(k) {
D <- diag(n-1)
D <- as.data.frame(D)
D <- mutate(D, 0, .before = k)
D <- as.matrix(D)
return(D)
}
selvec.f <- function(k) {
s <- numeric(n)
s[k] <- 1
return(s)
}
n <- 50
B <- binmat.f(n = n)
View(B)
B[27, 1:25] <- 1
B[27, 29:n] <- 1
# B[28, 1:26] <- 1
# B[28, 30:n] <- 1
B[29, 1:27] <- 1
B[29, 31:n] <- 1
n <- 50
B <- binmat.f(n = n)
n <- 50
B <- binmat.f(n = n)
# B[27, 1:25] <- 1
# B[27, 29:n] <- 1
# B[28, 1:26] <- 1
# B[28, 30:n] <- 1
# B[29, 1:27] <- 1
# B[29, 31:n] <- 1
B[1:25, 27] <- 1
B[29:n, 27] <- 1
# B[1:26, 28] <- 1
# B[30:n, 28] <- 1
B[1:27, 29] <- 1
B[31:n, 29] <- 1
source("~/Desktop/未命名檔案夾/Untitled.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 0.5), xlab = "PC1 (35%)", ylab = "PC2 (27%)")
source("~/Desktop/未命名檔案夾/Untitled.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (35%)", ylab = "PC2 (27%)")
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (65%)", ylab = "PC2 (21%)")
View(B)
View(W_IS)
plot(W_IS[1, ])
plot(W_IS[100, ])
source("~/Desktop/sim v2/Untitled3.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 1), xlab = "PC1 (36%)", ylab = "PC2 (25%)")
biplot(PCA, cex=c(0.01, 0.8), xlab = "PC1 (36%)", ylab = "PC2 (25%)")
biplot(PCA, cex=c(0.01, 0.8), xlab = "PC1 (36%)", ylab = "PC2 (25%)")
source("~/Desktop/sim v2/Untitled3.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 0.8), xlab = "PC1 (67%)", ylab = "PC2 (13%)")
source("~/Desktop/sim v2/Untitled3.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 0.8), xlab = "PC1 (87%)", ylab = "PC2 (5%)")
source("~/Desktop/sim v2/Untitled3.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 0.8), xlab = "PC1 (70%)", ylab = "PC2 (19%)")
source("~/Desktop/sim v2/Untitled3.R", echo=TRUE)
biplot(PCA, cex=c(0.01, 0.8), xlab = "PC1 (79%)", ylab = "PC2 (16%)")
